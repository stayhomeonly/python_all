{
  "uid" : "e651d4e1dc48e27a",
  "name" : "星光项目_token_login",
  "fullName" : "testcase.test_login.TestLogin#test_login",
  "historyId" : "020533943cd55a5ca156051ace37e7ae",
  "time" : {
    "start" : 1663490997610,
    "stop" : 1663490997620,
    "duration" : 10
  },
  "description" : "星光项目接口自动化-登录接口",
  "descriptionHtml" : "<p>星光项目接口自动化-登录接口</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '登录成功' in \"{'code': 1007, 'msg': '用户名或者密码错误'}\"\n +  where \"{'code': 1007, 'msg': '用户名或者密码错误'}\" = str({'code': 1007, 'msg': '用户名或者密码错误'})",
  "statusTrace" : "self = <autotest02.testcase.test_login.TestLogin object at 0x0000027E309AF278>\ndata = {'case_data': {'password': 'a123456', 'typeId': '101', 'username': 'xiaozhen'}, 'exp': '登录成功'}\n\n    @allure.description(\"星光项目接口自动化-登录接口\")\n    @allure.severity(\"critical\")\n    @allure.title(\"星光项目_token_login\")\n    @pytest.mark.parametrize('data', datas)  # 第一个入参 str  变量 用来接收数据源的数据   2.数据源要求失list或者tuple类型\n    def test_login(self, data):  # 我们要讲变量作为入参传到测试方法里面才能参数化 测试用例\n        allure.attach(body=str(data[\"case_data\"]), name=\"请求参数\")\n    \n        with allure.step(\"发起请求:\"):\n            res = requests.get(url='http://127.0.0.1:6666/business/token_login', params=data['case_data'])\n            res = res.json()\n    \n        allure.attach(body=data[\"exp\"], name='预期结果')\n>       assert data['exp'] in str(res)\nE       assert '登录成功' in \"{'code': 1007, 'msg': '用户名或者密码错误'}\"\nE        +  where \"{'code': 1007, 'msg': '用户名或者密码错误'}\" = str({'code': 1007, 'msg': '用户名或者密码错误'})\n\ntestcase\\test_login.py:35: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "星光项目接口自动化-登录接口",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '登录成功' in \"{'code': 1007, 'msg': '用户名或者密码错误'}\"\n +  where \"{'code': 1007, 'msg': '用户名或者密码错误'}\" = str({'code': 1007, 'msg': '用户名或者密码错误'})",
    "statusTrace" : "self = <autotest02.testcase.test_login.TestLogin object at 0x0000027E309AF278>\ndata = {'case_data': {'password': 'a123456', 'typeId': '101', 'username': 'xiaozhen'}, 'exp': '登录成功'}\n\n    @allure.description(\"星光项目接口自动化-登录接口\")\n    @allure.severity(\"critical\")\n    @allure.title(\"星光项目_token_login\")\n    @pytest.mark.parametrize('data', datas)  # 第一个入参 str  变量 用来接收数据源的数据   2.数据源要求失list或者tuple类型\n    def test_login(self, data):  # 我们要讲变量作为入参传到测试方法里面才能参数化 测试用例\n        allure.attach(body=str(data[\"case_data\"]), name=\"请求参数\")\n    \n        with allure.step(\"发起请求:\"):\n            res = requests.get(url='http://127.0.0.1:6666/business/token_login', params=data['case_data'])\n            res = res.json()\n    \n        allure.attach(body=data[\"exp\"], name='预期结果')\n>       assert data['exp'] in str(res)\nE       assert '登录成功' in \"{'code': 1007, 'msg': '用户名或者密码错误'}\"\nE        +  where \"{'code': 1007, 'msg': '用户名或者密码错误'}\" = str({'code': 1007, 'msg': '用户名或者密码错误'})\n\ntestcase\\test_login.py:35: AssertionError",
    "steps" : [ {
      "name" : "发起请求:",
      "time" : {
        "start" : 1663490997611,
        "stop" : 1663490997619,
        "duration" : 8
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "419a6296e8ed6400",
      "name" : "请求参数",
      "source" : "419a6296e8ed6400.attach",
      "type" : "text/plain",
      "size" : 64
    }, {
      "uid" : "d85ffb8b64dfb7cf",
      "name" : "预期结果",
      "source" : "d85ffb8b64dfb7cf.attach",
      "type" : "text/plain",
      "size" : 12
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "feature",
    "value" : "登录接口"
  }, {
    "name" : "epic",
    "value" : "星光项目接口"
  }, {
    "name" : "tag",
    "value" : "P0"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "DESKTOP-1OCD62H"
  }, {
    "name" : "thread",
    "value" : "13268-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'case_data': {'username': 'xiaozhen', 'password': 'a123456', 'typeId': '101'}, 'exp': '登录成功'}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "P0" ]
  },
  "source" : "e651d4e1dc48e27a.json",
  "parameterValues" : [ "{'case_data': {'username': 'xiaozhen', 'password': 'a123456', 'typeId': '101'}, 'exp': '登录成功'}" ]
}